// Verilated -*- SystemC -*-
// DESCRIPTION: Verilator output: Design implementation internals
// See Vsig_topology_top.h for the primary calling header

#include "Vsig_topology_top__pch.h"
#include "Vsig_topology_top_sig_topology_top.h"

VL_ATTR_COLD void Vsig_topology_top_sig_topology_top___eval_initial__TOP__sig_topology_top(Vsig_topology_top_sig_topology_top* vlSelf) {
    VL_DEBUG_IF(VL_DBG_MSGF("+      Vsig_topology_top_sig_topology_top___eval_initial__TOP__sig_topology_top\n"); );
    Vsig_topology_top__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    auto& vlSelfRef = std::ref(*vlSelf).get();
    // Body
    vlSelfRef.__PVT__cl0_icx_txport_cfg = 0U;
    vlSelfRef.__PVT__cl0_mycluster_id = 0U;
    vlSelfRef.__PVT__mn_node_id = 0U;
    vlSelfRef.__PVT__reg_cc_ctrl1 = 0U;
    vlSelfRef.__PVT__COH_RNF_Exist = 1U;
}

VL_ATTR_COLD void Vsig_topology_top_sig_topology_top___ctor_var_reset(Vsig_topology_top_sig_topology_top* vlSelf) {
    VL_DEBUG_IF(VL_DBG_MSGF("+      Vsig_topology_top_sig_topology_top___ctor_var_reset\n"); );
    Vsig_topology_top__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    auto& vlSelfRef = std::ref(*vlSelf).get();
    // Body
    const uint64_t __VscopeHash = VL_MURMUR64_HASH(vlSelf->name());
    vlSelf->cl0_ic_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5463981724289832655ull);
    vlSelf->cl0_rstb_ic_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9593818991446535246ull);
    vlSelf->cl0_cc_intfrx_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15041330598802718584ull);
    vlSelf->cl0_cc_rstb_intfrx_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16671465203683595766ull);
    vlSelf->cl0_p1_intfrx_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3717300261875998041ull);
    vlSelf->cl0_p1_rstb_intfrx_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14124166581158900939ull);
    vlSelf->cl0_p1_TX_LINKACTIVEREQ = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 617096729710674588ull);
    vlSelf->cl0_p1_TX_LINKACTIVEACK = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10593140010298941059ull);
    vlSelf->cl0_p1_RX_REQFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12597532982516061926ull);
    vlSelf->cl0_p1_RX_REQFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2013429107280550730ull);
    VL_SCOPED_RAND_RESET_W(151, vlSelf->cl0_p1_RX_REQFLIT, __VscopeHash, 2367497853332366095ull);
    vlSelf->cl0_p1_RX_REQLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6990932370756761328ull);
    vlSelf->cl0_p1_RX_RSPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1776421028415369462ull);
    vlSelf->cl0_p1_RX_RSPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 561349269542893435ull);
    VL_SCOPED_RAND_RESET_W(73, vlSelf->cl0_p1_RX_RSPFLIT, __VscopeHash, 13946197914817935844ull);
    vlSelf->cl0_p1_RX_RSPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1104990349289203877ull);
    vlSelf->cl0_p1_RX_DATFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1326135829792502643ull);
    vlSelf->cl0_p1_RX_DATFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11660316114024334061ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->cl0_p1_RX_DATFLIT, __VscopeHash, 25863723695584787ull);
    vlSelf->cl0_p1_RX_DATLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13435027903408568635ull);
    vlSelf->cl0_p1_RX_LINKACTIVEREQ = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17447297244802706090ull);
    vlSelf->cl0_p1_RX_LINKACTIVEACK = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17375113262681478494ull);
    vlSelf->cl0_p1_TX_SNPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4510047898573379721ull);
    vlSelf->cl0_p1_TX_SNPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11719387008509412588ull);
    VL_SCOPED_RAND_RESET_W(108, vlSelf->cl0_p1_TX_SNPFLIT, __VscopeHash, 7933575949420226798ull);
    vlSelf->cl0_p1_TX_SNPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7535090273742054575ull);
    vlSelf->cl0_p1_TX_RSPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10219760741161506017ull);
    vlSelf->cl0_p1_TX_RSPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2929238307061580138ull);
    VL_SCOPED_RAND_RESET_W(73, vlSelf->cl0_p1_TX_RSPFLIT, __VscopeHash, 4153101352937576084ull);
    vlSelf->cl0_p1_TX_RSPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15811471513280261863ull);
    vlSelf->cl0_p1_TX_DATFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1054200514672601458ull);
    vlSelf->cl0_p1_TX_DATFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 757299502656985218ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->cl0_p1_TX_DATFLIT, __VscopeHash, 14905834059256988832ull);
    vlSelf->cl0_p1_TX_DATLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14866469175379520166ull);
    vlSelf->cl0_p1_TXSACTIVE = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11513659839588118879ull);
    vlSelf->cl0_p1_RXSACTIVE = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9020386934070412428ull);
    vlSelf->cl0_p1_SYSCOREQ = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6690723268075840587ull);
    vlSelf->cl0_p1_SYSCOACK = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15724383829882779098ull);
    vlSelf->cl0_p3_intfrx_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 864515589478087297ull);
    vlSelf->cl0_p3_rstb_intfrx_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12216251782403516299ull);
    vlSelf->cl0_p3_RX_LINKACTIVEREQ = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 915787170508785789ull);
    vlSelf->cl0_p3_RX_LINKACTIVEACK = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12396104250984227858ull);
    vlSelf->cl0_p3_RX_RSPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 470446746643151832ull);
    vlSelf->cl0_p3_RX_RSPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9267926294752487837ull);
    VL_SCOPED_RAND_RESET_W(73, vlSelf->cl0_p3_RX_RSPFLIT, __VscopeHash, 13270273327437565525ull);
    vlSelf->cl0_p3_RX_RSPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17115348332509520257ull);
    vlSelf->cl0_p3_RX_DATFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9163993079287126269ull);
    vlSelf->cl0_p3_RX_DATFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1825267684263614589ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->cl0_p3_RX_DATFLIT, __VscopeHash, 7535974806005372524ull);
    vlSelf->cl0_p3_RX_DATLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16167648662035848577ull);
    vlSelf->cl0_p3_TX_LINKACTIVEREQ = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 18361827548255209058ull);
    vlSelf->cl0_p3_TX_LINKACTIVEACK = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14657891883522660326ull);
    vlSelf->cl0_p3_TX_REQFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14517562561217842281ull);
    vlSelf->cl0_p3_TX_REQFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11285498249447360948ull);
    VL_SCOPED_RAND_RESET_W(151, vlSelf->cl0_p3_TX_REQFLIT, __VscopeHash, 14738103365525117499ull);
    vlSelf->cl0_p3_TX_REQLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7444285252013781613ull);
    vlSelf->cl0_p3_TX_DATFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3808218904960341943ull);
    vlSelf->cl0_p3_TX_DATFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8353457991838463611ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->cl0_p3_TX_DATFLIT, __VscopeHash, 12650428701127673486ull);
    vlSelf->cl0_p3_TX_DATLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17126015950815006091ull);
    vlSelf->cl0_p3_TXSACTIVE = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4045322665595829608ull);
    vlSelf->cl0_p3_RXSACTIVE = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15068534518887374519ull);
    vlSelf->PCLK_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8104985963892920610ull);
    vlSelf->PRESETn_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6230616544574779527ull);
    vlSelf->PADDR_prog = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 14704174210238913493ull);
    vlSelf->PSEL_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15936286226652394475ull);
    vlSelf->PENABLE_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1475247925059085336ull);
    vlSelf->PWRITE_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 18321884463666558778ull);
    vlSelf->PWDATA_prog = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 8915447913214836150ull);
    vlSelf->PSTRB_prog = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 17622495250906810659ull);
    vlSelf->PREADY_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10144761143080778533ull);
    vlSelf->PRDATA_prog = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 2338494102912948993ull);
    vlSelf->PSLVERR_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 450623240131851891ull);
    vlSelf->qp_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17933174111345527607ull);
    vlSelf->qp_rstb = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2076407996424801320ull);
    vlSelf->qreqn = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11775565873081530239ull);
    vlSelf->qacceptn = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11446997399270137270ull);
    vlSelf->qdeny = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12253734335779669162ull);
    vlSelf->qactive = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3954170982902127988ull);
    vlSelf->qin_quiescence = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6114833606088053617ull);
    vlSelf->pstate = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6918955583165594308ull);
    vlSelf->preq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13517127927829356383ull);
    vlSelf->paccept = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17067914849730411368ull);
    vlSelf->pdeny = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16555932130167813006ull);
    vlSelf->pactive = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10489544803603440108ull);
    vlSelf->__PVT__cl0_icx_txport_cfg = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 5063418190633396637ull);
    vlSelf->__PVT__cm_homeaddr_base_all_hn_f = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 14619223296438610351ull);
    vlSelf->__PVT__cm_homeaddr_limit_all_hn_f = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 7789085967633061188ull);
    vlSelf->__PVT__noncm_homeaddr_base_all_hn_f = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 10569734242115779178ull);
    vlSelf->__PVT__noncm_homeaddr_limit_all_hn_f = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 4929601239921733728ull);
    vlSelf->__PVT__cm_homeaddr_base_all_pm = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 16326596507192002194ull);
    vlSelf->__PVT__cm_homeaddr_limit_all_pm = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 15039959541587252906ull);
    vlSelf->__PVT__noncm_homeaddr_base_all_pm = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 4362549229537796297ull);
    vlSelf->__PVT__noncm_homeaddr_limit_all_pm = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 17603428951671837452ull);
    vlSelf->__PVT__xy_coord_all_clus = VL_SCOPED_RAND_RESET_I(8, __VscopeHash, 12142997481838769342ull);
    vlSelf->__PVT__icx_txport_cfg_all_clus = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 9570661396875669617ull);
    vlSelf->__PVT__reg_syscoh_0_reg_syscoh_snppend_31_0 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 10745659779373700551ull);
    vlSelf->__PVT__reg_syscoh_1_reg_syscoh_snppend_63_32 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3081012592994163522ull);
    vlSelf->__PVT__reg_syscoh_2_reg_syscoh_snppend_95_64 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3405411144019764580ull);
    vlSelf->__PVT__reg_syscoh_3_reg_syscoh_snppend_127_96 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 16690434270896722073ull);
    vlSelf->__PVT__reg_syscoh_4_reg_syscoh_snppend_159_128 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 15921130057509134121ull);
    vlSelf->__PVT__reg_syscoh_5_reg_syscoh_snppend_191_160 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 1973645429065374920ull);
    vlSelf->__PVT__reg_syscoh_6_reg_syscoh_snppend_223_192 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 6973517285196886934ull);
    vlSelf->__PVT__reg_syscoh_7_reg_syscoh_snppend_255_224 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 1572291561443982976ull);
    vlSelf->__PVT__reg_syscoh_8_reg_syscoh_con2enable_31_0 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 2717896432257242748ull);
    vlSelf->__PVT__reg_syscoh_9_reg_syscoh_con2enable_63_32 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 10841486026252364310ull);
    vlSelf->__PVT__reg_syscoh_10_reg_syscoh_con2enable_95_64 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 10846036938923419511ull);
    vlSelf->__PVT__reg_syscoh_11_reg_syscoh_con2enable_127_96 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3435900871211142542ull);
    vlSelf->__PVT__reg_syscoh_12_reg_syscoh_con2enable_159_128 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 16745438199780222498ull);
    vlSelf->__PVT__reg_syscoh_13_reg_syscoh_con2enable_191_160 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 7739853291514425718ull);
    vlSelf->__PVT__reg_syscoh_14_reg_syscoh_con2enable_223_192 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3652769717165093222ull);
    vlSelf->__PVT__reg_syscoh_15_reg_syscoh_con2enable_255_224 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 17227344709575701783ull);
    vlSelf->__PVT__coh_clst_0_COH_CLST_Exist_31_0 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 9331142619039844711ull);
    vlSelf->__PVT__coh_clst_1_COH_CLST_Exist_63_32 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 17945459804539667964ull);
    vlSelf->__PVT__coh_clst_2_COH_CLST_Exist_95_64 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 11511914951039280959ull);
    vlSelf->__PVT__coh_clst_3_COH_CLST_Exist_127_96 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 1174377768098329912ull);
    vlSelf->__PVT__coh_clst_4_COH_CLST_Exist_159_128 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 296445957941516806ull);
    vlSelf->__PVT__coh_clst_5_COH_CLST_Exist_191_160 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 16058261428667155833ull);
    vlSelf->__PVT__coh_clst_6_COH_CLST_Exist_223_192 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 7530415247035918959ull);
    vlSelf->__PVT__coh_clst_7_COH_CLST_Exist_255_224 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3309468662650779310ull);
    vlSelf->__PVT__reset_0_top_sft_reset_n = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14166544367550877650ull);
    vlSelf->__PVT__reset_1_cluster_sft_reset_n_31_0 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 1912263148848918175ull);
    vlSelf->__PVT__reset_2_cluster_sft_reset_n_63_32 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5167150795739255525ull);
    vlSelf->__PVT__reset_3_cluster_sft_reset_n_95_64 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 2192631867158539274ull);
    vlSelf->__PVT__reset_4_cluster_sft_reset_n_127_96 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5143150665960502411ull);
    vlSelf->__PVT__reset_5_cluster_sft_reset_n_159_128 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 6181923302386481544ull);
    vlSelf->__PVT__reset_6_cluster_sft_reset_n_191_160 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3624084725231997594ull);
    vlSelf->__PVT__reset_7_cluster_sft_reset_n_223_192 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 13303996159819938311ull);
    vlSelf->__PVT__reset_8_cluster_sft_reset_n_255_224 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 904578131428455698ull);
    vlSelf->__PVT__cl0_mycluster_id = VL_SCOPED_RAND_RESET_I(8, __VscopeHash, 13429912039800075691ull);
    vlSelf->__PVT__mn_node_id = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 6366623572454694384ull);
    vlSelf->__PVT__xy_coord_all_pm = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 14093339878997901900ull);
    vlSelf->__PVT__xy_coord_all_hn_f = VL_SCOPED_RAND_RESET_I(8, __VscopeHash, 9419461143915451259ull);
    vlSelf->__PVT__COH_nodeid_all_rn = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 12026750110535324694ull);
    vlSelf->__PVT__reg_syscoh_snppend = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 14903119432745247399ull);
    vlSelf->__PVT__reg_syscoh_con2enable = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3903103454600665553ull);
    vlSelf->__PVT__reg_cc_ctrl1 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5747835356120788922ull);
    vlSelf->__PVT__rden_csr_top_or_clus = VL_SCOPED_RAND_RESET_I(2, __VscopeHash, 122014071111868614ull);
    vlSelf->__PVT__wren_csr_top_or_clus = VL_SCOPED_RAND_RESET_I(2, __VscopeHash, 12906431286606324245ull);
    vlSelf->__PVT__reg_wrdata_prog = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 3757935861495027888ull);
    vlSelf->__PVT__reg_wrstrb_prog = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 12837608835784584698ull);
    vlSelf->__PVT__reg_wren_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7786184497976211995ull);
    vlSelf->__PVT__reg_address_prog = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 12275681853826624396ull);
    vlSelf->__PVT__wrdata_rdy_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12237348272837384244ull);
    vlSelf->__PVT__reg_rden_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7829053783300692125ull);
    vlSelf->__PVT__reg_rddata_prog = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 16911108032389899917ull);
    vlSelf->__PVT__reg_rddata_valid_prog = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8204230655296286855ull);
    vlSelf->__PVT__rd_csr_clus_0 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 1081392283579378226ull);
    vlSelf->__PVT__rd_csr_top = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5504877888507020885ull);
    vlSelf->__Vcellout__sig_top_csr_wrapper_0__o_icx_txport_cfg_all_clus = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 16698308819732279633ull);
    vlSelf->__Vcellout__sig_top_csr_wrapper_0__o_xy_coord_all_clus = VL_SCOPED_RAND_RESET_I(8, __VscopeHash, 1074353234608251915ull);
    vlSelf->__Vcellinp__sig_top_csr_wrapper_0__i_rd_en = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6959905529151431852ull);
    vlSelf->__Vcellinp__sig_top_csr_wrapper_0__i_wr_en = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15378720057704908367ull);
    VL_SCOPED_RAND_RESET_W(242, vlSelf->__PVT__max_COH_nodeid_all_rn, __VscopeHash, 12720367639187191354ull);
    vlSelf->__PVT__COH_RNF_Exist = VL_SCOPED_RAND_RESET_I(22, __VscopeHash, 6670122137102227417ull);
    vlSelf->__PVT__cl0_p1_reg_syscoh = VL_SCOPED_RAND_RESET_I(2, __VscopeHash, 7309608922365172386ull);
    vlSelf->__PVT__cl0_p1_TXSACTIVE_OR_RXSACTIVE = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12243766738941344569ull);
    vlSelf->__PVT__cl0_p1_TXSACTIVE_OR_RXSACTIVE_reg = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3502534427687418619ull);
    vlSelf->__PVT__cl0_p1_TXSACTIVE_OR_RXSACTIVE_sync = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12236905597440202510ull);
    vlSelf->__PVT__cache_init_complete = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8188872323422654686ull);
    vlSelf->__PVT__cache_init_complete_sync = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12906839949776135896ull);
    vlSelf->__PVT__all_cache_init_complete = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3192120307074908864ull);
    vlSelf->__PVT__cnoc_is_active = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15087116111331783830ull);
    vlSelf->__PVT__cnoc_is_inactive = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15983662775564361107ull);
    vlSelf->__PVT__cc_is_inactive = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17456575816747454447ull);
    vlSelf->__PVT__cc_is_inactive_sync = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5569650755951755723ull);
    vlSelf->__PVT__all_cc_are_inactive = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11650739669942975335ull);
    vlSelf->__PVT__all_cc_are_inactive_reg = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1401390920673565602ull);
    vlSelf->__PVT__all_cc_are_inactive_sync = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 302994664242930300ull);
    vlSelf->__Vcellinp__cl0_sig_clustertop__i_wren_csr_top_or_clus = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 863001081824168259ull);
    vlSelf->__Vcellinp__cl0_sig_clustertop__i_rden_csr_top_or_clus = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16815540154635525666ull);
    vlSelf->__Vdly__all_cc_are_inactive_reg = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11924321632387112047ull);
    vlSelf->__Vdly__cl0_p1_TXSACTIVE_OR_RXSACTIVE_reg = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15976183633399384339ull);
}
