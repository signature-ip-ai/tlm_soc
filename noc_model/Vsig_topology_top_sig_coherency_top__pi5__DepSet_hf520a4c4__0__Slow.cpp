// Verilated -*- SystemC -*-
// DESCRIPTION: Verilator output: Design implementation internals
// See Vsig_topology_top.h for the primary calling header

#include "Vsig_topology_top__pch.h"
#include "Vsig_topology_top_sig_coherency_top__pi5.h"

VL_ATTR_COLD void Vsig_topology_top_sig_coherency_top__pi5___eval_initial__TOP__sig_topology_top__cl0_sig_clustertop__inst_cl0_clustercore__sig_chi_cc_top_0(Vsig_topology_top_sig_coherency_top__pi5* vlSelf) {
    VL_DEBUG_IF(VL_DBG_MSGF("+            Vsig_topology_top_sig_coherency_top__pi5___eval_initial__TOP__sig_topology_top__cl0_sig_clustertop__inst_cl0_clustercore__sig_chi_cc_top_0\n"); );
    Vsig_topology_top__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    auto& vlSelfRef = std::ref(*vlSelf).get();
    // Body
    vlSelfRef.__PVT__reg_dwt_en = 0U;
    vlSelfRef.__PVT__req_retry_ack = 0U;
    vlSelfRef.__PVT__req_pcrd_grant = 0U;
    vlSelfRef.__PVT__req_readreceipt = 0U;
    VL_CONST_W_1X(74,vlSelfRef.__PVT__respbody_retryack,0x00000000);
    VL_CONST_W_1X(74,vlSelfRef.__PVT__respbody_pcrdgnt,0x00000000);
    VL_CONST_W_1X(74,vlSelfRef.__PVT__respbody_rdrcpt,0x00000000);
}

VL_ATTR_COLD void Vsig_topology_top_sig_coherency_top__pi5___ctor_var_reset(Vsig_topology_top_sig_coherency_top__pi5* vlSelf) {
    VL_DEBUG_IF(VL_DBG_MSGF("+            Vsig_topology_top_sig_coherency_top__pi5___ctor_var_reset\n"); );
    Vsig_topology_top__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    auto& vlSelfRef = std::ref(*vlSelf).get();
    // Body
    const uint64_t __VscopeHash = VL_MURMUR64_HASH(vlSelf->name());
    vlSelf->__PVT__cc_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10522366009035690765ull);
    vlSelf->__PVT__cc_gclk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8377306375537073466ull);
    vlSelf->__PVT__rstb_cc_clk = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8322896653826704470ull);
    vlSelf->__PVT__cc_is_inactive = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17456575816747454447ull);
    vlSelf->__PVT__ic_RX_REQFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10592429441801268004ull);
    vlSelf->__PVT__ic_RX_REQFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10926843868711745075ull);
    VL_SCOPED_RAND_RESET_W(151, vlSelf->__PVT__ic_RX_REQFLIT, __VscopeHash, 10081777986980214128ull);
    vlSelf->__PVT__ic_RX_REQLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7784705244231261851ull);
    vlSelf->__PVT__ic_TX_RSPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2060896954836582492ull);
    vlSelf->__PVT__ic_TX_RSPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6986194630684743894ull);
    VL_SCOPED_RAND_RESET_W(73, vlSelf->__PVT__ic_TX_RSPFLIT, __VscopeHash, 16838131667686188585ull);
    vlSelf->__PVT__ic_TX_RSPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12927273387244497438ull);
    vlSelf->__PVT__ic_RX_RSPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 18123678973012384143ull);
    vlSelf->__PVT__ic_RX_RSPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17408552711796289962ull);
    VL_SCOPED_RAND_RESET_W(73, vlSelf->__PVT__ic_RX_RSPFLIT, __VscopeHash, 1354610994472511875ull);
    vlSelf->__PVT__ic_RX_RSPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4980050914503369147ull);
    vlSelf->__PVT__ic_TX_SNPFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2271438628891321049ull);
    vlSelf->__PVT__ic_TX_SNPFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6849754011617526692ull);
    VL_SCOPED_RAND_RESET_W(152, vlSelf->__PVT__ic_TX_SNPFLIT, __VscopeHash, 10785170976365685348ull);
    vlSelf->__PVT__ic_TX_SNPLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4400709601415914605ull);
    vlSelf->__PVT__ic_RX_DATFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11842918978764936861ull);
    vlSelf->__PVT__ic_RX_DATFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16491006942135745796ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->__PVT__ic_RX_DATFLIT, __VscopeHash, 2011190906039008480ull);
    vlSelf->__PVT__ic_RX_DATLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3658967141809139587ull);
    vlSelf->__PVT__l3_datvalid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 18037613034641414218ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__l3_datflit, __VscopeHash, 9412865659407568722ull);
    vlSelf->__PVT__l3_rddata_resperr = VL_SCOPED_RAND_RESET_I(2, __VscopeHash, 17960824384386241377ull);
    vlSelf->__PVT__l3_rddata_txnid = VL_SCOPED_RAND_RESET_I(13, __VscopeHash, 11609160148862092481ull);
    vlSelf->__PVT__porthas_datgnt_fromcc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 260289634538244644ull);
    vlSelf->__PVT__ic_TX_DATFLITPEND = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8102072163694598261ull);
    vlSelf->__PVT__ic_TX_DATFLITV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17980292739927272412ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->__PVT__ic_TX_DATFLIT, __VscopeHash, 11344885391285752503ull);
    vlSelf->__PVT__ic_TX_DATLCRDV = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5674497833994614527ull);
    vlSelf->__PVT__mycluster_id = VL_SCOPED_RAND_RESET_I(8, __VscopeHash, 2384492568486524022ull);
    vlSelf->__PVT__COH_RNF_Exist = VL_SCOPED_RAND_RESET_I(22, __VscopeHash, 6670122137102227417ull);
    vlSelf->__PVT__reg_cc_ctrl1 = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5747835356120788922ull);
    VL_SCOPED_RAND_RESET_W(242, vlSelf->__PVT__COH_nodeid_all_rn, __VscopeHash, 12026750110535324694ull);
    vlSelf->__PVT__xy_coord_all_pm = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 14093339878997901900ull);
    vlSelf->__PVT__cm_homeaddr_base_all_pm = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 16326596507192002194ull);
    vlSelf->__PVT__cm_homeaddr_limit_all_pm = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 15039959541587252906ull);
    vlSelf->__PVT__noncm_homeaddr_base_all_pm = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 4362549229537796297ull);
    vlSelf->__PVT__noncm_homeaddr_limit_all_pm = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 17603428951671837452ull);
    vlSelf->__PVT__dmt_enable_all_pm_vec = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1292660233603648185ull);
    vlSelf->__PVT__dct_enable_all_rn_vec = VL_SCOPED_RAND_RESET_I(22, __VscopeHash, 10100887395540299746ull);
    for (int __Vi0 = 0; __Vi0 < 16; ++__Vi0) {
        vlSelf->__PVT__i_ucie_base_addresses[__Vi0] = VL_SCOPED_RAND_RESET_I(28, __VscopeHash, 18152667713515942132ull);
    }
    for (int __Vi0 = 0; __Vi0 < 16; ++__Vi0) {
        vlSelf->__PVT__i_ucie_limit_addresses[__Vi0] = VL_SCOPED_RAND_RESET_I(29, __VscopeHash, 3856869148840372046ull);
    }
    vlSelf->__PVT__cc_reqflit_valid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10043822492024180417ull);
    VL_SCOPED_RAND_RESET_W(154, vlSelf->__PVT__cc_reqflit, __VscopeHash, 5878351373451340800ull);
    vlSelf->__PVT__l3reqflit_fifo_full = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11472252453616715901ull);
    vlSelf->__PVT__l3_rspvalid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17693132866999472368ull);
    VL_SCOPED_RAND_RESET_W(73, vlSelf->__PVT__l3_rspflit, __VscopeHash, 1662627214675102205ull);
    vlSelf->__PVT__porthas_rspgnt_fromcc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13920214279695019476ull);
    vlSelf->__PVT__l3_wrdata_valid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9791843214000505586ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__l3_wrdata, __VscopeHash, 18003566889332421426ull);
    vlSelf->__PVT__l3_wrbe = VL_SCOPED_RAND_RESET_Q(64, __VscopeHash, 14685619672498633367ull);
    vlSelf->__PVT__l3_drop_wrdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1194144497674625872ull);
    vlSelf->__PVT__dbid_from_l3 = VL_SCOPED_RAND_RESET_I(12, __VscopeHash, 17251312435797380305ull);
    vlSelf->__PVT__l3_wrdatabuf_hasroom = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9024268663274794995ull);
    vlSelf->__PVT__dirc_init_complete = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3987835445286343248ull);
    vlSelf->__PVT__use_early_write_response = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16156962359594802056ull);
    VL_SCOPED_RAND_RESET_W(155, vlSelf->__PVT__cmd_ph4, __VscopeHash, 11751809096008860029ull);
    vlSelf->__PVT__cmd_addr_ph3 = VL_SCOPED_RAND_RESET_Q(52, __VscopeHash, 15266753109267875081ull);
    vlSelf->__PVT__cmd_addr_ph3_has_matchingentry_incmq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12518608944154213720ull);
    vlSelf->__PVT__wren_cmq_ph4 = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14891505571427714330ull);
    vlSelf->__PVT__block_fetch_cohc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14509791292380692131ull);
    VL_SCOPED_RAND_RESET_W(155, vlSelf->__PVT__cm_cmd, __VscopeHash, 17134410543704108858ull);
    VL_SCOPED_RAND_RESET_W(84, vlSelf->__PVT__evict_details, __VscopeHash, 7740052233367362936ull);
    vlSelf->__PVT__cm_cmdvalid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10935687010101470423ull);
    vlSelf->__PVT__clr_cm_cmdvalid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13771873550443589026ull);
    vlSelf->__PVT__cm_cmdvalid_evict = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6304623208976443716ull);
    vlSelf->__PVT__clr_cm_cmdvalid_evict = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17550963073695834682ull);
    vlSelf->__PVT__cachehit = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2349583359423476893ull);
    vlSelf->__PVT__cachehit_vector = VL_SCOPED_RAND_RESET_I(16, __VscopeHash, 15048246798432137174ull);
    vlSelf->__PVT__rddata_cache = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5959125425215884480ull);
    vlSelf->__PVT__rden_dircache_cohc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8162467225932071642ull);
    vlSelf->__PVT__cache_index_rd_cohc = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 14772679112272561765ull);
    vlSelf->__PVT__cache_tag_rd_cohc = VL_SCOPED_RAND_RESET_Q(36, __VscopeHash, 16141030410509592312ull);
    vlSelf->__PVT__rden_dircache_cohc_pre = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1610192942604463983ull);
    vlSelf->__PVT__cache_index_rd_cohc_pre = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 16464158456153889941ull);
    vlSelf->__PVT__rden_dircache_dirc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7156539384725406486ull);
    vlSelf->__PVT__rden_dircache_dirc_pre = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4593349465035568576ull);
    vlSelf->__PVT__cache_index_rd_dirc = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 8565802225367209905ull);
    vlSelf->__PVT__cache_tag_rd_dirc = VL_SCOPED_RAND_RESET_Q(36, __VscopeHash, 9172860265252253180ull);
    vlSelf->__PVT__evict_this_one = VL_SCOPED_RAND_RESET_I(16, __VscopeHash, 2648936200774576425ull);
    vlSelf->__PVT__evict_this_cycle = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 18054005477542234120ull);
    vlSelf->__PVT__validity_vector = VL_SCOPED_RAND_RESET_I(16, __VscopeHash, 15235716900527194424ull);
    vlSelf->__PVT__in_pendingq_cache_all = VL_SCOPED_RAND_RESET_I(16, __VscopeHash, 3136649274983905927ull);
    vlSelf->__PVT__rdout_tag_value = VL_SCOPED_RAND_RESET_Q(36, __VscopeHash, 13519040157002029984ull);
    vlSelf->__PVT__wren_cache_vector_dirc = VL_SCOPED_RAND_RESET_I(16, __VscopeHash, 13422555697672807853ull);
    vlSelf->__PVT__wrdata_cache_dirc = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 12580468982736356887ull);
    vlSelf->__PVT__cache_index_wr_dirc = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 9938736034238851818ull);
    vlSelf->__PVT__cache_tag_wr_dirc = VL_SCOPED_RAND_RESET_Q(36, __VscopeHash, 14309181317981999127ull);
    vlSelf->__PVT__wrvalid_dirc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10979752630291603306ull);
    vlSelf->__PVT__wren_cache_cohc_or_dirc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11335812194555609403ull);
    vlSelf->__PVT__cache_index_wr_cohc_or_dirc = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 7554872119381538796ull);
    vlSelf->__PVT__excl_load_reqv = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10808861801624030781ull);
    vlSelf->__PVT__excl_load_addr = VL_SCOPED_RAND_RESET_Q(46, __VscopeHash, 1305004775471632917ull);
    vlSelf->__PVT__excl_load_lpid = VL_SCOPED_RAND_RESET_I(5, __VscopeHash, 1128574918061078016ull);
    vlSelf->__PVT__excl_load_size = VL_SCOPED_RAND_RESET_I(3, __VscopeHash, 8389692310150307164ull);
    vlSelf->__PVT__excl_load_srcid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 13242249198345360380ull);
    vlSelf->__PVT__buffer_full = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14663875713135549949ull);
    vlSelf->__PVT__excl_store_reqv = VL_SCOPED_RAND_RESET_I(2, __VscopeHash, 16029179714232092762ull);
    vlSelf->__PVT__excl_store_addr = VL_SCOPED_RAND_RESET_Q(46, __VscopeHash, 14657429174638830149ull);
    vlSelf->__PVT__excl_store_lpid = VL_SCOPED_RAND_RESET_I(5, __VscopeHash, 15301952635516898376ull);
    vlSelf->__PVT__excl_store_size = VL_SCOPED_RAND_RESET_I(3, __VscopeHash, 9909767904224513108ull);
    vlSelf->__PVT__excl_store_srcid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 18234007080309262872ull);
    vlSelf->__PVT__excl_store_pass = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9923750064643304324ull);
    vlSelf->__PVT__atom_req_update = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11777322918528692193ull);
    vlSelf->__PVT__atom_addr = VL_SCOPED_RAND_RESET_Q(46, __VscopeHash, 14315296359907429470ull);
    vlSelf->__PVT__wren_cache_vector_cohc = VL_SCOPED_RAND_RESET_I(16, __VscopeHash, 6229255951922335325ull);
    vlSelf->__PVT__wrdata_cache_cohc = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 14567287323421655836ull);
    vlSelf->__PVT__cache_index_wr_cohc = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 10591548629094600039ull);
    vlSelf->__PVT__cache_tag_wr_cohc = VL_SCOPED_RAND_RESET_Q(36, __VscopeHash, 10305822797683716731ull);
    vlSelf->__PVT__inpendingq_matches_collnq_cohc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11566162297299885176ull);
    vlSelf->__PVT__read_datareuse_compdata_1st = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 12846616243735907786ull);
    vlSelf->__PVT__dealloc_compfifo_vector_compdata = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 11493001396580220228ull);
    vlSelf->__PVT__rden_whichcompfifo_1st = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 5509032055052891637ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__rddata_to_compdata_1st, __VscopeHash, 5805672471924250957ull);
    vlSelf->__PVT__rdbe_to_compdata_1st = VL_SCOPED_RAND_RESET_Q(64, __VscopeHash, 10948574360022597351ull);
    vlSelf->__PVT__rden_which16bytes_1st = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 1344652133813019292ull);
    vlSelf->__PVT__read_datareuse_compdata_2nd = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 15256057008911888014ull);
    vlSelf->__PVT__rden_whichcompfifo_2nd = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 13060892155541568180ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__rddata_to_compdata_2nd, __VscopeHash, 2288986580764663643ull);
    vlSelf->__PVT__rdbe_to_compdata_2nd = VL_SCOPED_RAND_RESET_Q(64, __VscopeHash, 14093778943262611337ull);
    vlSelf->__PVT__rden_which16bytes_2nd = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 17476598023409336661ull);
    VL_SCOPED_RAND_RESET_W(128, vlSelf->__PVT__valid_location_all, __VscopeHash, 15691278364285599930ull);
    vlSelf->__PVT__compbuf_available_compbuftop = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 16691506993162517898ull);
    vlSelf->__PVT__buffernum_available = VL_SCOPED_RAND_RESET_I(5, __VscopeHash, 13775671881704718491ull);
    vlSelf->__PVT__allocate_compbuf_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5072133469036596221ull);
    vlSelf->__PVT__rresp_compbuf = VL_SCOPED_RAND_RESET_I(2, __VscopeHash, 1708658169856089228ull);
    vlSelf->__PVT__wren_reqcmdq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12201464873303997130ull);
    VL_SCOPED_RAND_RESET_W(156, vlSelf->__PVT__wrdata_reqcmdq, __VscopeHash, 10509249749369163677ull);
    vlSelf->__PVT__send_reqcrdt_update = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17634417913722192789ull);
    vlSelf->__PVT__wren_compbuff_rcv_dat = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 11341453654749857997ull);
    vlSelf->__PVT__rcv_datproc_wr_to_compbuff = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5069621296229615253ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__wrdata_compbuff_rcv_dat, __VscopeHash, 1149517979905314866ull);
    vlSelf->__PVT__wrbe_compbuff_rcv_dat = VL_SCOPED_RAND_RESET_Q(64, __VscopeHash, 6014815511984436015ull);
    vlSelf->__PVT__wren_which128_compbuff_rcv_dat = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 9364982223231970779ull);
    vlSelf->__PVT__wren_compbuff_xmt_dat = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 7987891579283942239ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__wrdata_compbuff_xmt_dat, __VscopeHash, 401943146470800283ull);
    vlSelf->__PVT__wrbe_compbuff_xmt_dat = VL_SCOPED_RAND_RESET_Q(64, __VscopeHash, 1533167835345199251ull);
    vlSelf->__PVT__wren_which128_compbuff_xmt_dat = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 9799742353579135959ull);
    vlSelf->__PVT__wren_compbuff = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 15238093118913760672ull);
    VL_SCOPED_RAND_RESET_W(512, vlSelf->__PVT__wrdata_compbuff, __VscopeHash, 3167941775578646159ull);
    vlSelf->__PVT__wrbe_compbuff = VL_SCOPED_RAND_RESET_Q(64, __VscopeHash, 1169562462464015725ull);
    vlSelf->__PVT__wren_which128_compbuff = VL_SCOPED_RAND_RESET_I(4, __VscopeHash, 12189470619392961981ull);
    vlSelf->__PVT__enable_init_update = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13683977253010121183ull);
    vlSelf->__PVT__send_respcrdt_update_cohc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4980263148403496985ull);
    vlSelf->__PVT__wren_respcmdq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1153417048320893578ull);
    VL_SCOPED_RAND_RESET_W(74, vlSelf->__PVT__wrdata_respcmdq, __VscopeHash, 9048115003673750040ull);
    vlSelf->__PVT__wren_drespcmdq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4925900247815952177ull);
    VL_SCOPED_RAND_RESET_W(109, vlSelf->__PVT__wrdata_drespcmdq, __VscopeHash, 1410683045650114290ull);
    vlSelf->__PVT__wren_memrespcmdq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 913600410044621036ull);
    VL_SCOPED_RAND_RESET_W(109, vlSelf->__PVT__wrdata_memrespcmdq, __VscopeHash, 11547144100788774640ull);
    vlSelf->__PVT__wren_snpreqfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9980584901421468606ull);
    vlSelf->__PVT__empty_snpreqfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8812859534707948393ull);
    vlSelf->__PVT__room_atlst3_snpreqfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8871782108954021544ull);
    VL_SCOPED_RAND_RESET_W(191, vlSelf->__PVT__wrdata_snpreqfifo, __VscopeHash, 4801220196664942517ull);
    VL_SCOPED_RAND_RESET_W(191, vlSelf->__PVT__rddata_snpreqfifo, __VscopeHash, 5529800526399312295ull);
    vlSelf->__PVT__rden_snpreqfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13160031482171605047ull);
    vlSelf->__PVT__full_snpreqfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2813042500215223784ull);
    VL_SCOPED_RAND_RESET_W(181, vlSelf->__PVT__data_outcompfifo, __VscopeHash, 8248033285274261892ull);
    vlSelf->__PVT__wren_outcompfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7769135947045629551ull);
    VL_SCOPED_RAND_RESET_W(181, vlSelf->__PVT__wrdata_outcompfifo, __VscopeHash, 5139519633176733958ull);
    vlSelf->__PVT__empty_outcompfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6325585739201874543ull);
    VL_SCOPED_RAND_RESET_W(181, vlSelf->__PVT__rddata_outcompfifo, __VscopeHash, 13886202332761437919ull);
    vlSelf->__PVT__rden_outcompfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8886584385858519593ull);
    vlSelf->__PVT__full_outcompfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13961051321052729625ull);
    vlSelf->__PVT__room_atlst3_outcompfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15317600366221672467ull);
    vlSelf->__PVT__dirc_canwrite_tocache = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8528095151192250366ull);
    vlSelf->__PVT__req_resp_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8477813137800465214ull);
    vlSelf->__PVT__req_resp_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15373783711339039012ull);
    vlSelf->__PVT__req_retry_ack = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 17787793606977226748ull);
    vlSelf->__PVT__req_pcrd_grant = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11620457739990091831ull);
    vlSelf->__PVT__req_readreceipt = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14238351225281945974ull);
    VL_SCOPED_RAND_RESET_W(74, vlSelf->__PVT__respbody_snpreq, __VscopeHash, 14749717961920806112ull);
    VL_SCOPED_RAND_RESET_W(74, vlSelf->__PVT__respbody_compdata, __VscopeHash, 18159381090262869894ull);
    vlSelf->__PVT__respbody_rdrcpt[0] = 0U;
    vlSelf->__PVT__respbody_rdrcpt[1] = 0U;
    vlSelf->__PVT__respbody_rdrcpt[2] = 0U;
    vlSelf->__PVT__respbody_retryack[0] = 0U;
    vlSelf->__PVT__respbody_retryack[1] = 0U;
    vlSelf->__PVT__respbody_retryack[2] = 0U;
    vlSelf->__PVT__respbody_pcrdgnt[0] = 0U;
    vlSelf->__PVT__respbody_pcrdgnt[1] = 0U;
    vlSelf->__PVT__respbody_pcrdgnt[2] = 0U;
    vlSelf->__PVT__clr_2nd_buffer = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5189925435663627466ull);
    vlSelf->__PVT__grant_resp = VL_SCOPED_RAND_RESET_I(5, __VscopeHash, 15449471594239148283ull);
    vlSelf->__PVT__allocate_respbuf_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12050584821466466478ull);
    vlSelf->__PVT__allocate_respbuf_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10366684842875233516ull);
    vlSelf->__PVT__respbuff_avail = VL_SCOPED_RAND_RESET_I(6, __VscopeHash, 7306347581112127521ull);
    vlSelf->__PVT__clr_outstand_cmd_compdata = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 683546815149091109ull);
    vlSelf->__PVT__clr_collnreg_sending_ini_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1376278890112039216ull);
    vlSelf->__PVT__index_pendingq_clr_outstand_cmd_compdata = VL_SCOPED_RAND_RESET_I(6, __VscopeHash, 13256195857044924955ull);
    vlSelf->__PVT__clr_outstand_cmd_snpreq = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 14247094991853056904ull);
    vlSelf->__PVT__index_pendingq_clr_outstand_cmd_snpreq = VL_SCOPED_RAND_RESET_I(6, __VscopeHash, 660746365005381008ull);
    vlSelf->__PVT__avoid_clr_colln_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5938401738667444506ull);
    vlSelf->__PVT__fiforoom_atlst4_cmq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12010265418786223346ull);
    vlSelf->__PVT__full_cmqfifo = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7697748521783914580ull);
    vlSelf->__PVT__cmqhas_1room = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5212482075423727568ull);
    vlSelf->__PVT__cmqhas_2room = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11328495738407190341ull);
    vlSelf->__PVT__cmqhas_3room = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1792089563180104986ull);
    vlSelf->__PVT__en_blocking_reqcmdq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12487398171900918568ull);
    vlSelf->__PVT__index_cache_eviction = VL_SCOPED_RAND_RESET_I(10, __VscopeHash, 16098368761919786461ull);
    vlSelf->__PVT__snp_tx_snpflitv = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12926558551752950189ull);
    VL_SCOPED_RAND_RESET_W(152, vlSelf->__PVT__txflit_snpreq_memreq, __VscopeHash, 16528786473810605718ull);
    VL_SCOPED_RAND_RESET_W(152, vlSelf->__PVT__snp_tx_snpflit_compdata, __VscopeHash, 16786561769021764822ull);
    vlSelf->__PVT__ic_tx_snpreqflitv = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10536697736490643123ull);
    VL_SCOPED_RAND_RESET_W(152, vlSelf->__PVT__ic_tx_snpreqflit, __VscopeHash, 18309828042647411558ull);
    vlSelf->__PVT__compdata_tx_reqflitv = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4828788483133406915ull);
    vlSelf->__PVT__dirc_flittype_rdnosnp = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2674562101558686317ull);
    vlSelf->__PVT__dirc_flittype_wrnosnp = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 6900480873154276157ull);
    vlSelf->__PVT__snpreq_crdt_avail = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2623854896764814424ull);
    vlSelf->__PVT__dat_link_crdt_atleast_2 = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15048726234301891291ull);
    vlSelf->__PVT__compdata_tx_datflitv = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5658433782436806923ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->__PVT__compdata_tx_datflit, __VscopeHash, 2235789749406062051ull);
    vlSelf->__PVT__xmtdata_crdt_avail = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12907589820972475277ull);
    vlSelf->__PVT__clr_outstand_prep = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 4831969144429222940ull);
    vlSelf->__PVT__clr_unused_compbuff_num = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15920510751932765253ull);
    vlSelf->__PVT__dealloc_compfifo_vector_ccn = VL_SCOPED_RAND_RESET_I(32, __VscopeHash, 2998429520734936392ull);
    vlSelf->__PVT__wren_compbuff_num_snpreq_1st = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8446112528902780294ull);
    vlSelf->__PVT__wren_compbuff_num_snpreq_2nd = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2978671294353993846ull);
    vlSelf->__PVT__wren_compbuff_num_compdata_1st = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8911625818810551941ull);
    vlSelf->__PVT__wren_compbuff_num_compdata_2nd = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9349338333634213131ull);
    vlSelf->__PVT__en_compbuf_2nd_for_snpdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2836399122947749663ull);
    vlSelf->__PVT__outq_index = VL_SCOPED_RAND_RESET_I(6, __VscopeHash, 2171178808354690650ull);
    vlSelf->__PVT__index_outq_rcvdata = VL_SCOPED_RAND_RESET_I(6, __VscopeHash, 8003945633691835691ull);
    vlSelf->__PVT__compq_buff_to_rcvdatproc_1st = VL_SCOPED_RAND_RESET_I(5, __VscopeHash, 10387630494224006427ull);
    vlSelf->__PVT__compq_buff_to_rcvdatproc_2nd = VL_SCOPED_RAND_RESET_I(5, __VscopeHash, 2732871786700246567ull);
    vlSelf->__PVT__vld_compq_buff_to_rcvdatproc_2nd = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2804318706357737406ull);
    vlSelf->__PVT__invalid_req_rcvdatproc = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8160450347341578802ull);
    vlSelf->__PVT__vld_compbuf_2nd_for_snpdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 8127965794600819949ull);
    vlSelf->__PVT__compdata_sending_ccreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12083653312022928931ull);
    vlSelf->__PVT__cc_reqflit_valid_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13172681180536616131ull);
    vlSelf->__PVT__cc_reqflit_valid_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15475005809183358748ull);
    vlSelf->__PVT__index_pendingq_compdata = VL_SCOPED_RAND_RESET_I(6, __VscopeHash, 4393906453454876949ull);
    vlSelf->__PVT__addr_outstandq_to_compdata = VL_SCOPED_RAND_RESET_Q(52, __VscopeHash, 16900301021783641212ull);
    vlSelf->__PVT__block_compbuf_available = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 470389546691545043ull);
    vlSelf->__PVT__allocate_compbuf_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3187281034613071800ull);
    vlSelf->__PVT__compdata_clr_outstand = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5694655595672539364ull);
    vlSelf->__PVT__ic_tx_snpreq_datflitv = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 5036578564474068344ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->__PVT__ic_tx_snpreq_datflit, __VscopeHash, 12493844424579633886ull);
    vlSelf->__PVT__snp_tx_datflitv_resperr = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 7990782264815997008ull);
    VL_SCOPED_RAND_RESET_W(680, vlSelf->__PVT__snp_tx_datflit_resperr, __VscopeHash, 6627572651401910085ull);
    vlSelf->__PVT__reg_dwt_en = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 14128118012209622633ull);
    vlSelf->__PVT__ignore_likyshared_writeevictorevict = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15509056567874720179ull);
    vlSelf->__PVT__writeevict_or_evict = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 9199834939110044152ull);
    vlSelf->__PVT__slc_readnosnp_apply_dmt_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1072027501109372619ull);
    vlSelf->__PVT__slc_origreq_is_read_snp_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 13031258584557560537ull);
    vlSelf->__PVT__slc_readnosnp_apply_dmt_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 15415702906048887558ull);
    vlSelf->__PVT__slc_origreq_is_read_snp_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 3465160318481382979ull);
    vlSelf->__PVT__rcv_reqproc_nodeid_valid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 103453739947225423ull);
    vlSelf->__PVT__rcv_reqproc_full_node_id = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 13278839770664471580ull);
    vlSelf->__PVT__rcv_reqproc_linear_nodeid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 13056033596310808173ull);
    vlSelf->__PVT__rcv_rsp_dat_srcid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 919612537128142333ull);
    vlSelf->__PVT__rcv_rsp_dat_linear_srcid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 11293250065188563077ull);
    vlSelf->__PVT__xmt_snpreq_linear_tgtid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 17831523250813728621ull);
    vlSelf->__PVT__xmt_snpreq_full_tgtid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 7243788447634016825ull);
    vlSelf->__PVT__xmt_snpreq_linear_srcid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 18090426741341351139ull);
    vlSelf->__PVT__xmt_snpreq_full_srcid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 17354795813078116031ull);
    vlSelf->__PVT__xmt_compdata_nodeid_valid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 4385846170530132039ull);
    vlSelf->__PVT__xmt_compdata_linear_nodeid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 6690080160670029121ull);
    vlSelf->__PVT__xmt_compdata_full_node_id = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 15913050334836378577ull);
    vlSelf->__PVT__xmt_resp_nodeid_valid = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 1043428081048749191ull);
    vlSelf->__PVT__xmt_resp_linear_nodeid = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 12516406362150379969ull);
    vlSelf->__PVT__xmt_resp_full_node_id = VL_SCOPED_RAND_RESET_I(11, __VscopeHash, 740506415677821718ull);
    VL_SCOPED_RAND_RESET_W(181, vlSelf->__Vcellout__sig_coherency_ctrlr_0__wrdata_outcompfifo, __VscopeHash, 11710039713000012699ull);
    VL_SCOPED_RAND_RESET_W(191, vlSelf->__Vcellout__snpreq_fifo_0__fifo_rddata, __VscopeHash, 7145414596165959340ull);
    VL_SCOPED_RAND_RESET_W(191, vlSelf->__Vcellinp__snpreq_fifo_0__fifo_wrdata, __VscopeHash, 15112354200578516711ull);
    vlSelf->__Vcellinp__sig_chi_xmt_snpreq_0__gnt_rsp_snpreq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 10430981942427801133ull);
    vlSelf->__Vcellinp__sig_chi_xmt_compdata_0__gnt_resp_compdata = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 2595893784769077028ull);
    vlSelf->__PVT__fifofull_reqcmdq = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 11061467253754343562ull);
    vlSelf->__PVT__atom_res_update = VL_SCOPED_RAND_RESET_I(1, __VscopeHash, 12605299356513852222ull);
}
