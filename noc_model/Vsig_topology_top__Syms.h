// Verilated -*- SystemC -*-
// DESCRIPTION: Verilator output: Symbol table internal header
//
// Internal details; most calling programs do not need this header,
// unless using verilator public meta comments.

#ifndef VERILATED_VSIG_TOPOLOGY_TOP__SYMS_H_
#define VERILATED_VSIG_TOPOLOGY_TOP__SYMS_H_  // guard

#include "systemc"
#include "verilated_sc.h"
#include "verilated.h"

// INCLUDE MODEL CLASS

#include "Vsig_topology_top.h"

// INCLUDE MODULE CLASSES
#include "Vsig_topology_top___024root.h"
#include "Vsig_topology_top___024unit.h"
#include "Vsig_topology_top_sig_cnoc_atomic_processor_meta_in_interface.h"
#include "Vsig_topology_top_sig_cnoc_atomic_processor_data_in_interface.h"
#include "Vsig_topology_top_sig_cnoc_atomic_processor_data_out_interface.h"
#include "Vsig_topology_top_sig_cnoc_port_rx_handshake.h"
#include "Vsig_topology_top_sig_cnoc_port_tx_handshake.h"

// SYMS CLASS (contains all model state)
class alignas(VL_CACHE_LINE_BYTES)Vsig_topology_top__Syms final : public VerilatedSyms {
  public:
    // INTERNAL STATE
    Vsig_topology_top* const __Vm_modelp;
    bool __Vm_activity = false;  ///< Used by trace routines to determine change occurred
    uint32_t __Vm_baseCode = 0;  ///< Used by trace routines when tracing multiple models
    VlDeleter __Vm_deleter;
    bool __Vm_didInit = false;

    // MODULE INSTANCE STATE
    Vsig_topology_top___024root    TOP;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_dat_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_dat_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_dat_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_dat_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_req_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_rsp_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__l3_port_rsp_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_dat_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_dat_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_dat_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_dat_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_req_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_req_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_req_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_rsp_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_rsp_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_rsp_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n0_port_rsp_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_dat_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_dat_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_dat_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_dat_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_req_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_req_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_req_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_rsp_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_rsp_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_rsp_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n1_port_rsp_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_dat_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_dat_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_dat_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_dat_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_req_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_req_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_req_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_rsp_vc0_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_rsp_vc0_tx_hs;
    Vsig_topology_top_sig_cnoc_port_rx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_rsp_vc1_rx_hs;
    Vsig_topology_top_sig_cnoc_port_tx_handshake TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__n3_port_rsp_vc1_tx_hs;
    Vsig_topology_top_sig_cnoc_atomic_processor_data_out_interface TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__sig_chi_cc_top_0__DOT__data_from_ap;
    Vsig_topology_top_sig_cnoc_atomic_processor_data_in_interface TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__sig_chi_cc_top_0__DOT__data_to_ap;
    Vsig_topology_top_sig_cnoc_atomic_processor_meta_in_interface TOP__sig_topology_top__DOT__cl0_sig_clustertop__DOT__inst_cl0_clustercore__DOT__sig_chi_cc_top_0__DOT__meta_to_ap;

    // CONSTRUCTORS
    Vsig_topology_top__Syms(VerilatedContext* contextp, const char* namep, Vsig_topology_top* modelp);
    ~Vsig_topology_top__Syms();

    // METHODS
    const char* name() { return TOP.name(); }
};

#endif  // guard
